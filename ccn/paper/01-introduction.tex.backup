\section{Introduction}

Content-centric networking (CCN) is a type of request-based information-centric
networking (ICN) architecture. In CCN, all data is named. Consumers obtain data
by issuing an explicit request for the content by its name. The network is
responsible for forwarding this request towards producers, based on the name.
The producers then generate and return the content response. Since a name uniquely identifies
a content response, routers may cache content responses and use them to respond
future requests for the same name. As a consequence, all content has an (implicit
or explicit) authenticator that is used to verify the name-to-data binding. In
order to prevent cache poisoning attachs, wherein a malicious producer supplies
fake data in a content response that is propogated in the network, a router
should never serve (a) content with an invalid authenticator or (b) cached
content that it cannot verify. To enable (b), content objects with a digital
signature are expected to carry the public verification key or certificate. If the
authenticator is a MAC, then intermediate routers cannot verify it and should
therefore not cache the content.

One negative side effect of name-based requests is that any on-path or
eavesdropping adversary between a consumer and producer can learn the identity
and contents of all data in transit. In traditional IP-based networks, there are
generally two types of mechanisms to solve this problem: (1) anonymity
networks such as Tor \cite{dingledine2004tor} or (2) VPNs. As tools focused on anonymity,
the former help prevent linkability of packets to their requestors without
always protecting the identities or content themselves. In contrast, VPNs focus
on packet confidentiality by creating a tunnel between two private networks
or a consumer and single private network. All traffic over this tunnel is
encrypted and thereby opaque to an eavesdropper. VPNs differ from anonymity
networks such as Tor in that they are \emph{network-layer} mechanisms that
typically only introduces a single layer of encryption to protect traffic.
Thus, while Tor can be used to enable VPN-like functionality, it is often
far more inefficient since it operates above the network layer.

In ICN (or more specifically, CCN and NDN), ANDaNA was the first anonymity network of its
kind. Similar to Tor, ANDaNA uses circuits formed from anonymizing routers (ARs)
to marshall requests and responses between consumers and producers. The former
onion-encrypt interests and content using the public key(s) of the target ARs.
A variant of ANDaNA uses symmetric keys for packet encapsulation but suffers from
linkability. Tsudik et al. \cite{tsudik2016ac3n} proposed an optimized version of the symmetric-key
ANDaNA variant that did not permit linkability. To the best of our knowledge, there
is no anonymity network variant for ICN architectures. Though tunneling is only
useful for only a subset of ICN traffic, we believe it is a gap to be addressed
for this emerging technology, for a variety of reasons. {\bf First}, privacy
continues to be an elusive property for CCN applications. Tunneling will help
permit some degree of privacy within trusted AS domains from external passive
eavesdroppers. {\bf Second}, multi-hop circuits as used in ANDaNA are overkill
when trying to retain privacy instead of anonymity. {\bf Third}, end-to-end
sessions such as those enabled by CCNxKE \cite{ccnxke} and similar protocols
only serve those engaged in the session. In contrast, since the threat model is
different, tunneled traffic has the potential to serve any number of consumers
within the same trusted domain. Thus, while tunneling may contrast the content-centric
nature of data transmission in CCN, it fills a needed void for this architecture.

In this paper, we present CCVPN, a secure tunneling protocol and system design for
CCN. Similar to ANDaNA, CCVPN encrypts interests and content objects between producers
and consumers. In contrast, CCVPN only encrypts packets between a \emph{single}
source and destination to form a tunnel. In the standard configuration, both
endpoints of the tunnel are gateways between two trusted domains. It is possible,
however, for the source to be an individual consumer. In fact, the standard two-hop
ANDaNA circuit is identical to a nested tunnel with the same source. Thus,
CCVPN is more flexible than a general anonymity network.

The rest of this paper is organized as follows. Section \ref{sec:prelims} provides
an overview of CCN and the relevant protocol details necessary to understand
CCVPN. Section \ref{sec:related} describes previous related work that motivates
our design. Section \ref{metho} then describes the main CCVPN design with the necessary
cryptographic and packet format details. We analyze the security of CCVPN
in Section \ref{sec:sec-analysis}. We present the results of a comprehensive
analysis and experimental evaluation in Sections \ref{sec:analysis} and \ref{sec:exp},
respectively. We then conclude with a discussion of future work in Section \ref{sec:conclusion}
